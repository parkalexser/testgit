010101000110100001101001011100110010000001110011011011110110110001110101011101
000110100101101111011011100010000001101001011100110010000001110110011000010110
110001101001011001000010000001101111011011100110110001111001001000000110011001
101111011100100010000001110000011000010111001001101011011000010110110001100101
011110000111001101100101011100100100000001100111011011010110000101101001011011
000010111001100011011011110110110100100000011100110111010101100010011011010110
100101110011011100110110100101101111011011100111001100100000001110110010100100
100000001000000010000000100000001000000010000000100000001000000010000000100000
010100110110111100100000011101110110010100100000011010000110111101110000011001
010010000001111001011011110111010100100000011001000110111101101110001001110111
010000100000011100110110100001100001011100100110010100100000011110010110111101
110101011100100010000001110011011011110110110001110101011101000110100101101111
011011100111001100100000011101110110100101110100011010000010000001100001011011
100111100101100010011011110110010001111001001000000011101100101001001000000110
000101101110011001000010000001101000011001010111001001100101001000000110100101
110011001000000111100101101111011101010111001000100000010101000110000101110011
011010110010000001000011011011110110010001100101001110100010000000111001001100
000011010000111000001101010011100000110101001100000010111000100000011100000110


001011110010111101111000011100110111010001100101011000110110100000101110011001
010111010100101111011100110111010101100010011011010110100101110100001011010110
001101101111011001000110010100000000000000000000000000000000000000000000000000


78 111 32 97 99 99 101 115 115 44 32 116 01110010 01111001 00100000 01110100 01101111 00100000 01110011 01101111 01101100 01110110 01100101 00100000 01110100 01101000 01101001 01110011 00100000 01110010 01101001 01100100 01100100 01101100 01100101 00100001 00100000 00111010 00101001

<?php 

$A = [0, 1, 3, -2, 0, 1, 0, -3, 2, 3];
// print_r($A);
 // $A[0] =  0;
 // $A[1] =  1;
 // $A[2] =  3;
 // $A[3] = -2;
 // $A[4] =  0;
 // $A[5] =  1;
 // $A[6] =  0;
 // $A[7] = -3;
 // $A[8] =  2;
 // $A[9] =  3 ;
 
 	
function solution($A){

}

function findMax1(){

}

function findMin(){

}

function findMax2(){
	
}

/*function solution($A) {
    for($i = 0; $i < count($A)-1; $i++){

        if($A[$i] > $A[$i+1]){
        
            if($A[$key_start] < $A[$i] || $refresh){
                $key_start = $i;
                unset($refresh);
            }

            $key_midle = $i + 1;

        } elseif($A[$i] <= $A[$i+1]) {
            
            $key_end = $i;
            $refresh = true;

        }

        if ($key_start < $key_midle && $key_midle < $key_end){
        	$first = $A[$key_start] - $A[$key_midle];
    		$second = $A[$key_end] - $A[$key_midle];
    		echo 'min-'.min($first, $second);
        }

        
    }

}

echo solution($A);*/

 ?>

